[{"/Users/michalm/Desktop/react-player/src/index.js":"1","/Users/michalm/Desktop/react-player/src/App.js":"2","/Users/michalm/Desktop/react-player/src/components/Song.js":"3","/Users/michalm/Desktop/react-player/src/components/Player.js":"4","/Users/michalm/Desktop/react-player/src/components/Library.js":"5","/Users/michalm/Desktop/react-player/src/components/LibrarySong.js":"6","/Users/michalm/Desktop/react-player/src/components/Nav.js":"7","/Users/michalm/Desktop/react-player/src/data.js":"8","/Users/michalm/Desktop/react-player/src/util.js":"9"},{"size":198,"mtime":1611574872010,"results":"10","hashOfConfig":"11"},{"size":2379,"mtime":1611613262526,"results":"12","hashOfConfig":"11"},{"size":348,"mtime":1611584587683,"results":"13","hashOfConfig":"11"},{"size":3268,"mtime":1611612999075,"results":"14","hashOfConfig":"11"},{"size":676,"mtime":1611604659265,"results":"15","hashOfConfig":"11"},{"size":978,"mtime":1611612957193,"results":"16","hashOfConfig":"11"},{"size":429,"mtime":1611604405853,"results":"17","hashOfConfig":"11"},{"size":4054,"mtime":1611612352281,"results":"18","hashOfConfig":"11"},{"size":345,"mtime":1611608961176,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"160wuhb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/michalm/Desktop/react-player/src/index.js",[],["40","41"],"/Users/michalm/Desktop/react-player/src/App.js",[],"/Users/michalm/Desktop/react-player/src/components/Song.js",[],"/Users/michalm/Desktop/react-player/src/components/Player.js",["42","43"],"import React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from '@fortawesome/free-solid-svg-icons';\nimport { playAudio } from '../util';\n\nconst Player = ({\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  songInfo,\n  setSongInfo,\n  songs,\n  setSongs,\n  setCurrentSong,\n}) => {\n  //UseEffect\n  useEffect(() => {\n    //Add Active State\n    const newSongs = songs.map((eachSong) => {\n      if (eachSong.id === currentSong.id) {\n        return {\n          ...eachSong,\n          active: true,\n        };\n      } else {\n        return {\n          ...eachSong,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n\n  //Event Handlers\n  const playSongHandler = (e) => {\n    setIsPlaying(!isPlaying);\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === 'skip-forward') {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === 'skip-back') {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if(isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n    // playAudio(isPlaying, audioRef);\n    if(isPlaying) audioRef.current.play();\n  };\n  //Add the styles\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  return (\n    <div className='player'>\n      <div className='time-control'>\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n          }}\n          className='track'\n        >\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime || 0}\n            type='range'\n            onChange={dragHandler}\n          />\n          <div style={trackAnim} className='animate-track'></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\n      </div>\n      <div className='play-control'>\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler('skip-back')}\n          className='skip-back'\n          size='2x'\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className='play'\n          size='2x'\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className='skip-forward'\n          size='2x'\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler('skip-forward')}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","/Users/michalm/Desktop/react-player/src/components/Library.js",[],"/Users/michalm/Desktop/react-player/src/components/LibrarySong.js",[],"/Users/michalm/Desktop/react-player/src/components/Nav.js",[],"/Users/michalm/Desktop/react-player/src/data.js",[],"/Users/michalm/Desktop/react-player/src/util.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":9,"column":10,"nodeType":"50","messageId":"51","endLine":9,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":39,"column":6,"nodeType":"54","endLine":39,"endColumn":19,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'playAudio' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"61","text":"62"},[758,771],"[currentSong, setSongs, songs]"]